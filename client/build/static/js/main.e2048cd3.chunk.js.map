{"version":3,"sources":["Components/Nav/Assets/logo.png","Components/Nav/Nav.js","utils/FunctionsContext.js","utils/Contexts.js","Components/Main/Intro/TopIntro.js","utils/API.js","Components/Main/Intro/BottomIntro.js","Components/Main/Intro/IntroMain.js","Components/Loader/loadingGif.gif","Components/Loader/Loader.js","Components/Main/SearchResults/Assets/fern.jpg","Components/Main/SearchResults/LocationList.js","Components/Main/SearchResults/ResultList.js","Components/Main/SearchResults/InformationBlock.js","Components/Main/SearchResults/SearchResults.js","Components/Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","Nav","collapseOnSelect","expand","className","Navbar","Brand","href","src","logo","FunctionsContext","React","createContext","handleSearch","onChange","onClick","QueryContext","TopIntro","useContext","userSearch","setUserSearch","Container","fluid","Row","Form","inline","onSubmit","Group","controlId","Control","size","type","placeholder","name","Button","xmlns","width","height","viewBox","d","axios","require","a","get","response","console","log","lon","lat","getSeeds","searchRes","getLocation","BottomIntro","useState","seeds","setSeeds","useEffect","API","then","res","data","Col","map","Card","style","margin","Body","Text","title","Img","variant","imageURL","id","IntroMain","Loader","loadingGif","alt","LocationParent","elementData","index","undefined","ResultList","onClickList","results","locationArray","locationElementState","setLocationElementState","Promise","all","dataMap","features","properties","label","locationRefine","arr","el","locationElement","newArr","result","ListGroup","Item","e","action","sm","md","lg","Image","images","url","fern","LocationList","jsxFunc","listItemData","locationElementIndex","stateIndex","display","audioDescription","isOpenToPublic","InformationBlock","listItemID","idTarget","filter","SearchResults","setListItemID","searchData","useQuery","input","refetchInterval","searchResponse","lonLatArr","longitude","latitude","testState","preventDefault","target","value","status","error","Footer","queryClient","QueryClient","App","redirect","redirectState","setRedirectState","to","QueryClientProvider","client","Provider","path","component","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2048cd3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.9905a210.png\";","import React from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport \"./Nav.css\";\r\nimport logo from \"./Assets/logo.png\";\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <div>\r\n      {/* <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\"> */}\r\n      <Nav collapseOnSelect expand=\"lg\" className=\"navBar\">\r\n        {/* <div className=\"imgContainer\" >\r\n          <img className=\"logo\" src={logo} />\r\n        </div> */}\r\n        <Navbar.Brand className=\"logoImg\" href=\"/\">\r\n          <img className=\"logo\" src={logo} />\r\n        </Navbar.Brand>\r\n      </Nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\nconst FunctionsContext = React.createContext({\r\n  // userSearch: { searchInput: \"\" },\r\n  // setUserSearch: () => {},\r\n  handleSearch: () => {},\r\n  onChange: () => {},\r\n  onClick: () => {},\r\n});\r\n\r\nexport default FunctionsContext;\r\n\r\n// import { createContext } from \"react\";\r\n\r\n// export default createContext(null);\r\n","import React from \"react\";\r\n\r\n//Context for the user input\r\nexport const QueryContext = React.createContext(null);\r\n\r\nexport const TestContext = React.createContext(null);\r\n\r\n//Context for the ID of the list item the user clicked\r\nexport const ResultIDContext = React.createContext(null);\r\n","import React, { useContext } from \"react\";\r\nimport \"./TopIntro.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FunctionsContext from \"../../../utils/FunctionsContext\";\r\nimport { QueryContext } from \"../../../utils/Contexts\";\r\n\r\n//\r\n//\r\n// EDIT CSS DETAILS LATER TO\r\n//\r\n//\r\n//\r\n\r\n// const TopIntro = ({ search, onChange, userSearch, setUserSearch }) => {\r\nconst TopIntro = () => {\r\n  //This context passes he handleSearch function from App.js\r\n  const { handleSearch } = useContext(FunctionsContext);\r\n\r\n  //This context is used to save whats the user is searching\r\n  //allowing the data to be used in other components\r\n  const { userSearch, setUserSearch } = useContext(QueryContext);\r\n  // console.log(userSearch, \"usersearch from top intro\");\r\n  // Updates the state of userSearch\r\n  const onChange = (e) => {\r\n    // console.log(\"on change ran\");\r\n    setUserSearch({ ...userSearch, [e.target.name]: e.target.value });\r\n  };\r\n  // console.log(userSearch, \" this is the value for userSearch TopMain.js\");\r\n  return (\r\n    <div>\r\n      <div className=\"container-fluid topMainDiv d-flex align-items-center\">\r\n        {/*  */}\r\n        {/*  */}\r\n        {/* make fluid container a media query */}\r\n        {/* !!!!!!!!! DUDE YOU CAN USE THE DEV TOOLS \"DEVICE TOOL BAR\" TO HELP WITH MOBILE */}\r\n        {/*  */}\r\n        {/*  */}\r\n        <Container fluid className=\"overlay\">\r\n          {/* <Row className=\"d-flex justify-content-center\"> */}\r\n          <Row className=\"d-flex justify-content-center\">\r\n            <div>\r\n              <h1 className=\"introText\">Find Your Path</h1>\r\n            </div>\r\n          </Row>\r\n          <Row className=\"topIntFormRow\">\r\n            <div className=\"topIntFormBorder\">\r\n              <Form inline className=\"topIntSearchForm\" onSubmit={handleSearch}>\r\n                <Form.Group controlId=\"topIntSearchFormGroup\">\r\n                  {/* Input */}\r\n                  <Form.Control\r\n                    className=\"topIntSearchFormInput\"\r\n                    size=\"lg\"\r\n                    type=\"text\"\r\n                    placeholder=\"Search \"\r\n                    // onChange={onChange}\r\n                    name=\"input\"\r\n                  />\r\n                </Form.Group>\r\n                <Button type=\"submit\" className=\"topIntSearchFormBtn\">\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path d=\"M23.111 20.058l-4.977-4.977c.965-1.52 1.523-3.322 1.523-5.251 0-5.42-4.409-9.83-9.829-9.83-5.42 0-9.828 4.41-9.828 9.83s4.408 9.83 9.829 9.83c1.834 0 3.552-.505 5.022-1.383l5.021 5.021c2.144 2.141 5.384-1.096 3.239-3.24zm-20.064-10.228c0-3.739 3.043-6.782 6.782-6.782s6.782 3.042 6.782 6.782-3.043 6.782-6.782 6.782-6.782-3.043-6.782-6.782zm2.01-1.764c1.984-4.599 8.664-4.066 9.922.749-2.534-2.974-6.993-3.294-9.922-.749z\" />\r\n                  </svg>\r\n                </Button>\r\n              </Form>\r\n            </div>\r\n          </Row>\r\n        </Container>\r\n        {/* search bar/ form stuff */}\r\n        {/* figure out the margin on the page */}\r\n        {/* Bay area Favorites */}\r\n        {/* Pre-rendered bay sites */}\r\n        {/* four boxes */}\r\n        {/* </Container> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopIntro;\r\n","const axios = require(\"axios\");\r\n\r\nasync function getSeeds() {\r\n  try {\r\n    const response = await axios.get(\"api/seeds\");\r\n    // console.log(response, \" seeds from API.js\");\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nasync function searchRes(userSearch) {\r\n  try {\r\n    const response = await axios.get(`api/places/${userSearch}`);\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nasync function getLocation(lon, lat) {\r\n  try {\r\n    const response = await axios.get(`api/location/${lon}/${lat}`);\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport default { getSeeds, searchRes, getLocation };\r\n\r\n// export default { getSeeds, searchRes };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"./BottomMain.css\";\r\nimport API from \"../../../utils/API\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nconst BottomIntro = () => {\r\n  //This brings the seed data in to the bottom section of the\r\n  //first page\r\n  const [seeds, setSeeds] = useState([\r\n    // {\r\n    //   title: \"\",\r\n    //   imageURL: \"\",\r\n    // },\r\n  ]);\r\n  // This renders the seed data when it loads(is mounted)\r\n  useEffect(() => {\r\n    getSeedData();\r\n  }, []);\r\n\r\n  // This is the callback for getting te seed data and updating\r\n  // the state for seeds const\r\n  function getSeedData() {\r\n    API.getSeeds().then((res) => {\r\n      // console.log(res.data);\r\n      setSeeds(res.data);\r\n    });\r\n  }\r\n  // console.log(seeds);\r\n\r\n  // const cards = ({title, imageURL}) => {\r\n\r\n  // }\r\n\r\n  return (\r\n    // <div className=\"subDiv d-flex align-items-stretch\">\r\n    //\r\n    // original div\r\n    // <div className=\"d-flex botIntParDiv\">\r\n    // test div\r\n    <div className=\"botIntParDiv\">\r\n      <Container className=\"  bottomContainer \">\r\n        <Row className=\"subHeading \">\r\n          <Col className=\"headingCol\">\r\n            <h1 className=\"heading d-flex\">Northern California Favorites</h1>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"subBoxRow\">\r\n          {seeds.map((data) => (\r\n            <Card key={data.id} style={{ width: \"15rem\", margin: \"7px\" }}>\r\n              <Card.Body>\r\n                <Card.Text className=\"text-center\">{data.title}</Card.Text>\r\n              </Card.Body>\r\n              <Card.Img\r\n                style={{ height: \"178px\" }}\r\n                variant=\"bottom\"\r\n                src={data.imageURL}\r\n              />\r\n            </Card>\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n      <Container className=\"mt-5 mb-5 border-bottom border-top\">\r\n        <h1 className=\"pt-2\">Future Development</h1>\r\n        <h5>User Accounts</h5>\r\n        <ul>\r\n          <li>Allow users to create accounts.</li>\r\n        </ul>\r\n        <p>\r\n          The user information would be store in a mongoDB database. Their\r\n          password would be encrypted using bcrypt, a password hashing function,\r\n          to ensure their information is secure.\r\n        </p>\r\n        <h5>Page Functionality</h5>\r\n        <p>\r\n          When the card items below the \"Northern California Favorites\" heading\r\n          are clicked the user would be redirected to a page that shows the\r\n          information for the location.\r\n        </p>\r\n        <h5>Visual Aspects</h5>\r\n        <p>\r\n          There will be continual development of the CSS for this page. The\r\n          addition of media query's will allow there to be cleaner styling of\r\n          the elements across different screen widths.\r\n        </p>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BottomIntro;\r\n","import React from \"react\";\r\nimport TopIntro from \"./TopIntro\";\r\nimport BottomIntro from \"./BottomIntro\";\r\n\r\nconst IntroMain = () => {\r\n  return (\r\n    <div>\r\n      <TopIntro />\r\n      <BottomIntro />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IntroMain;\r\n","export default __webpack_public_path__ + \"static/media/loadingGif.5c0a255c.gif\";","import React from \"react\";\r\nimport \"./Loader.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport loadingGif from \"./loadingGif.gif\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    //work on height\r\n    <Container className=\"loaderCont\">\r\n      <div className=\"loaderDiv\">\r\n        <img src={loadingGif} alt=\"..Loading\" className=\"loadingGif\" />\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","export default __webpack_public_path__ + \"static/media/fern.aebe124f.jpg\";","import React from \"react\";\r\nimport Loader from \"../../Loader/Loader\";\r\n\r\nconst LocationParent = ({ elementData, index }) => {\r\n  // console.log(index);\r\n  if (elementData !== undefined) {\r\n    // console.log(data);\r\n    return <div>{elementData[index]}</div>;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Loader />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default LocationParent;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport fern from \"./Assets/fern.jpg\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Loader from \"../../Loader/Loader\";\r\n\r\nimport LocationList from \"./LocationList\";\r\n\r\n//try moving the jsx as a separate function\r\n\r\nconst ResultList = ({ onClickList, results, locationArray }) => {\r\n  const [locationElementState, setLocationElementState] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Gets the data from the promise and makes data usable\r\n    const locationPromise =\r\n      locationArray !== undefined\r\n        ? Promise.all(locationArray).then((data) => {\r\n            // console.log(data);\r\n            //\r\n            //\r\n            // This gets the name of the search result\r\n            const dataMap = data.map((res) => {\r\n              console.log(res);\r\n              if (res === undefined) {\r\n                const noLocation = \"No Location Found\";\r\n                return noLocation;\r\n              } else {\r\n                const mapRes = res.data?.features[0]?.properties?.label;\r\n                // const mapRes = res.data?.features[0]?.properties;\r\n                return mapRes;\r\n              }\r\n            });\r\n            // Passes dataMap as a param\r\n            return locationRefine(dataMap);\r\n          })\r\n        : undefined;\r\n    // console.log(locationPromise, \"hello\");\r\n\r\n    // Refines the data and changes any undefined data to \"No Location Found\"\r\n    const locationRefine = (dataMap, index) => {\r\n      // console.log(dataMap);\r\n      const promiseData = dataMap;\r\n      // Array with updated data\r\n      const arr = promiseData.map((el) => {\r\n        if (el === undefined) {\r\n          return \"No Location Found\";\r\n        } else {\r\n          return el;\r\n        }\r\n      });\r\n      // New data gets passed as a param\r\n      return locationElement(arr);\r\n    };\r\n    // Function that sets the location element state with fulfilled data(not [promise] or out of order)\r\n    const locationElement = async (arr, index) => {\r\n      // console.log(arr);\r\n      const newArr = await arr;\r\n      console.log(newArr);\r\n      // Sets state with data in correct order\r\n      setLocationElementState(newArr);\r\n      return newArr;\r\n    };\r\n    //\r\n  }, []);\r\n\r\n  // const locationReturn = locationElement() ?? \"\";\r\n  // console.log(locationReturn);\r\n\r\n  // The List of search results on the left side of screen\r\n  return (\r\n    <div>\r\n      {results !== undefined ? (\r\n        results.map((result, index) => (\r\n          //\r\n          //\r\n          // *** set point-events to non in order to make this one cohesive clickable item\r\n          // List items for results\r\n          <ListGroup.Item\r\n            id={result.id}\r\n            key={result.id}\r\n            type=\"button\"\r\n            onClick={(e) => onClickList(e)}\r\n            action\r\n            className=\"listItemStyle stretched-link\"\r\n          >\r\n            <Container>\r\n              {/* <Container className=\"listItemInfoContainer\">\r\n                <Row> */}\r\n              {/* Image */}\r\n              {/* <Col sm=\"2\" md=\"2\" lg=\"2\" className=\"listImageCol\"> */}\r\n              {/* <div className=\"inlineListItem d-inline-flex\"> */}\r\n              <Row>\r\n                <Col sm=\"3\" md=\"3\" lg=\"3\">\r\n                  {\" \"}\r\n                  <Image\r\n                    className=\"listItemImg\"\r\n                    src={\r\n                      result.images[0].url === \"\" ? fern : result.images[0].url\r\n                    }\r\n                    alt=\"No Image Available\"\r\n                  />\r\n                </Col>\r\n\r\n                {/* </Col> */}\r\n                {/* <Col className=\"listTextCol\"> */}\r\n                {/* name of area */}\r\n                <Col sm=\"9\" md=\"9\" lg=\"9\">\r\n                  <div className=\"listItemTitleLoc\">\r\n                    <div className=\"listItemTitle \">{result.title}</div>\r\n\r\n                    <div className=\"listItemLoc \">\r\n                      {/* Locations */}\r\n                      <LocationList\r\n                        elementData={locationElementState}\r\n                        index={index}\r\n                        locationArray={locationArray}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n\r\n            {/* </Col> */}\r\n            {/* </Row> */}\r\n            {/* </Container> */}\r\n          </ListGroup.Item>\r\n        ))\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n      {/* {hello()} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultList;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport fern from \"./Assets/fern.jpg\";\r\n\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nimport Loader from \"../../Loader/Loader\";\r\n\r\nconst jsxFunc = (listItemData, locationElementIndex, locationElementState) => {\r\n  // console.log(locationElementIndex);\r\n\r\n  // console.log(locationElementState);\r\n  const stateIndex = locationElementIndex;\r\n\r\n  //  location Function\r\n  // Add class here for CSS\r\n  const locationInfo = () => {\r\n    if (locationElementState === []) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return <div>{locationElementState[stateIndex]}</div>;\r\n    }\r\n  };\r\n\r\n  // List Items\r\n  return (\r\n    <div>\r\n      {listItemData !== undefined ? (\r\n        listItemData.map((data, index) => (\r\n          <div key={data.id} className=\"infoMapDiv\">\r\n            {/* Title */}\r\n            <h1 className=\"infoTitle\">{data.title}</h1>\r\n            {/* Image */}\r\n            <Image\r\n              className=\"infoBlockImg\"\r\n              src={data.images[0].url === \"\" ? fern : data.images[0].url}\r\n              fluid\r\n            />\r\n            <div style={{ display: \"none\" }}>Hello World</div>\r\n            <p></p>\r\n            {/* Description */}\r\n            <p>{data.audioDescription}</p>\r\n            {\"\\n\"}\r\n            {/* Open to public */}\r\n            <p>\r\n              {data.isOpenToPublic === \"1\"\r\n                ? \"Open to the public\"\r\n                : \"Not open to the public\"}\r\n            </p>\r\n            {/* Link to site */}\r\n            <div>\r\n              <p>\r\n                <a href={data.url}>See More Information</a>\r\n              </p>\r\n            </div>\r\n            {/* Location on the list item */}\r\n            <div>{locationInfo()}</div>\r\n            <p></p>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst InformationBlock = ({ results, listItemID, locationArray, idTarget }) => {\r\n  const [locationElementState, setLocationElementState] = useState([]);\r\n  // console.log(idTarget);\r\n\r\n  useEffect(() => {\r\n    const locationPromise =\r\n      locationArray !== undefined\r\n        ? Promise.all(locationArray).then((data) => {\r\n            // console.log(data);\r\n\r\n            const dataMap = data.map((res) => {\r\n              if (res === undefined) {\r\n                const noLocation = \"No Location Found\";\r\n                return noLocation;\r\n              } else {\r\n                const mapRes = res.data?.features[0]?.properties?.label;\r\n                // const mapRes = res.data?.features[0]?.properties;\r\n                return mapRes;\r\n              }\r\n            });\r\n\r\n            return locationRefine(dataMap);\r\n            //pass the data as a parameter to a function\r\n          })\r\n        : undefined;\r\n    // console.log(locationPromise, \"hello\");\r\n\r\n    const locationRefine = (dataMap, index) => {\r\n      //Changing name for the data that was mapped\r\n      const promiseData = dataMap;\r\n      //Array for getting location information\r\n      //  /////Pre Refinement\r\n      const arr = promiseData.map((el) => {\r\n        if (el === undefined) {\r\n          return \"No Location Found\";\r\n        } else {\r\n          return el;\r\n        }\r\n      });\r\n      //passing this data as a param to the next function\r\n      return locationElement(arr);\r\n    };\r\n    //Async func to get array data.\r\n    const locationElement = async (arr, index) => {\r\n      // console.log(arr);\r\n      //Array for the location information\r\n      const newArr = await arr;\r\n      // Sets location element state with fulfilled array data\r\n      setLocationElementState(newArr);\r\n      return newArr;\r\n    };\r\n    //\r\n  }, []);\r\n\r\n  // Conditional for what gets rendered in the information block\r\n  if (listItemID === \"\") {\r\n    // console.log(\"no ID\");\r\n    // console.log(locationElementState);\r\n    const locationElementIndex = 0;\r\n    const listItemData = [results[0]];\r\n    // const index = 0;\r\n    return jsxFunc(listItemData, locationElementIndex, locationElementState);\r\n  } else if (results !== undefined) {\r\n    // console.log(locationElementState);\r\n    // console.log(\"new ID\");\r\n    // console.log(listItemID, \"new ID\");\r\n    // console.log(results);\r\n    const listItemData = results.filter((data) => data.id === listItemID);\r\n    // console.log(listItemData);\r\n    // console.log(locationElementState);\r\n    // const filteredItemID = listItemData[0].id;\r\n    // console.log(filteredItemID);\r\n    // const indexOfID = locationElementState.indexOf(listItemData);\r\n    // console.log(indexOfID);\r\n    const locationElementIndex = 0;\r\n    return jsxFunc(listItemData, locationElementIndex, locationElementState);\r\n  }\r\n};\r\n\r\nexport default InformationBlock;\r\n","import React, { useContext, useState } from \"react\";\r\nimport API from \"../../../utils/API\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Loader from \"../../Loader/Loader\";\r\nimport \"./SearchResults.css\";\r\nimport { QueryContext } from \"../../../utils/Contexts\";\r\n//React-Query library\r\nimport { useQuery } from \"react-query\";\r\n// import { ReactQueryDevtools } from \"react-query/devtools\";\r\n\r\n//Components\r\nimport ResultList from \"./ResultList\";\r\nimport InformationBlock from \"./InformationBlock\";\r\n// import { Promise } from \"mongoose\";\r\nconst SearchResults = () => {\r\n  //\r\n  //\r\n  // ***********************************\r\n  // USING A CONSOLE LOG OUTSIDE OF A FUNCTION MAKES useEffect RUN MULTIPLE TIMES\r\n  // ***********************************\r\n  //\r\n  //\r\n  // This is the context for the state that was declared in App.js(Parent)\r\n  // It updates the state of what the user is searching(When is get the search bar done)\r\n  const { userSearch, setUserSearch } = useContext(QueryContext);\r\n  const [listItemID, setListItemID] = useState(\"\");\r\n\r\n  //Don't use curly brackets for a single statement in a function\r\n  //If you use curly braces the callback data will return undefined\r\n  const searchData = useQuery(\r\n    userSearch.input,\r\n    () => API.searchRes(userSearch.input),\r\n    { refetchInterval: false }\r\n  );\r\n  // console.log(searchData);\r\n\r\n  const searchResponse = searchData?.data?.data?.data;\r\n  // console.log(searchResponse);\r\n\r\n  const lonLatArr =\r\n    searchResponse === undefined\r\n      ? undefined\r\n      : searchResponse.map((data) => ({\r\n          lon: data.longitude,\r\n          lat: data.latitude,\r\n        }));\r\n\r\n  const locationArray =\r\n    lonLatArr !== undefined\r\n      ? lonLatArr.map((data) => {\r\n          if (\r\n            (data.lon === \"\" && data.lat === \"\") ||\r\n            (data.lon === undefined && data.lat === undefined)\r\n          ) {\r\n            return;\r\n          } else {\r\n            return API.getLocation(data.lon, data.lat);\r\n          }\r\n        })\r\n      : undefined;\r\n\r\n  const [testState, setTestState] = useState({\r\n    input: \"\",\r\n  });\r\n  const onChange = (e) => {\r\n    // const searchInput = e.target.value;\r\n    const { name, value } = e.target;\r\n    return handleNewSearch(name, value);\r\n  };\r\n  const handleNewSearch = (name, value) => {\r\n    console.log(name, value, \"handle new search\");\r\n  };\r\n  const handleSearch = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      console.log(e.target.input.name);\r\n      setUserSearch({\r\n        [e.target.input.name]: e.target.input.value,\r\n      });\r\n      console.log(testState);\r\n      return;\r\n      // console.log(\"handle search\");\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const onClickList = (e) => {\r\n    // console.log(\"OnCLickItem ran\");\r\n    try {\r\n      e.preventDefault();\r\n      // console.log(searchResponse);\r\n      // console.log(e.target.id, \"ID inside of onClick\");\r\n      let idTarget = e.target.id;\r\n      // console.log(idTarget);\r\n      setListItemID(idTarget);\r\n      return;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"searchResultsSection\">\r\n      <Container className=\"searchBar\">\r\n        <Row className=\"formRow\">\r\n          <div className=\"formBorder\">\r\n            <Form inline className=\"searchBarForm\" onSubmit={handleSearch}>\r\n              <Form.Group controlId=\"searchFormInput\">\r\n                {/* Input */}\r\n                <Form.Control\r\n                  size=\"lg\"\r\n                  type=\"text\"\r\n                  placeholder=\"Search \"\r\n                  // onChange={onChange}\r\n                  name=\"input\"\r\n                />\r\n              </Form.Group>\r\n              <Button type=\"submit\" className=\"searchFormButton\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <path d=\"M23.111 20.058l-4.977-4.977c.965-1.52 1.523-3.322 1.523-5.251 0-5.42-4.409-9.83-9.829-9.83-5.42 0-9.828 4.41-9.828 9.83s4.408 9.83 9.829 9.83c1.834 0 3.552-.505 5.022-1.383l5.021 5.021c2.144 2.141 5.384-1.096 3.239-3.24zm-20.064-10.228c0-3.739 3.043-6.782 6.782-6.782s6.782 3.042 6.782 6.782-3.043 6.782-6.782 6.782-6.782-3.043-6.782-6.782zm2.01-1.764c1.984-4.599 8.664-4.066 9.922.749-2.534-2.974-6.993-3.294-9.922-.749z\" />\r\n                </svg>\r\n              </Button>\r\n            </Form>\r\n          </div>\r\n          {/* <button type=\"submit\" className=\"btn submitBtn\" form=\"inputSearch\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"24\"\r\n                height=\"24\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                <path d=\"M23.111 20.058l-4.977-4.977c.965-1.52 1.523-3.322 1.523-5.251 0-5.42-4.409-9.83-9.829-9.83-5.42 0-9.828 4.41-9.828 9.83s4.408 9.83 9.829 9.83c1.834 0 3.552-.505 5.022-1.383l5.021 5.021c2.144 2.141 5.384-1.096 3.239-3.24zm-20.064-10.228c0-3.739 3.043-6.782 6.782-6.782s6.782 3.042 6.782 6.782-3.043 6.782-6.782 6.782-6.782-3.043-6.782-6.782zm2.01-1.764c1.984-4.599 8.664-4.066 9.922.749-2.534-2.974-6.993-3.294-9.922-.749z\" />\r\n              </svg>\r\n            </button> */}\r\n        </Row>\r\n      </Container>\r\n      {/* </Row> */}\r\n      <Container className=\"searchResultsContainer\">\r\n        {/* Search bar*/}\r\n        {/* <Form onSubmit={handleSearch}> */}\r\n\r\n        <Row className=\"leftRightRow\">\r\n          {/* Left Side */}\r\n          <Col className=\"leftSide\" md=\"7\" lg=\"7\" sm=\"7\">\r\n            <ListGroup className=\"resultsDiv\">\r\n              {searchData.status === \"loading\" ? (\r\n                <Loader />\r\n              ) : searchData.status !== \"success\" ? (\r\n                <Loader />\r\n              ) : (\r\n                <ResultList\r\n                  // props\r\n                  onClickList={onClickList}\r\n                  results={searchResponse}\r\n                  locationArray={locationArray}\r\n                />\r\n              )}\r\n              {/* <ResultList onClickItem={onClickItem} results={searchResponse} /> */}\r\n            </ListGroup>\r\n          </Col>\r\n          {/*  */}\r\n          {/* Right Side */}\r\n          <Col className=\"rightSide\">\r\n            <div className=\"infoDiv\">\r\n              {searchData.status === \"loading\" ? (\r\n                <Loader />\r\n              ) : searchData.data !== undefined ? (\r\n                <InformationBlock\r\n                  results={searchResponse}\r\n                  locationArray={locationArray}\r\n                  listItemID={listItemID}\r\n                />\r\n              ) : (\r\n                \"Data Undefined\"\r\n              )}\r\n            </div>\r\n          </Col>\r\n          {/*  */}\r\n        </Row>\r\n      </Container>\r\n      <Container className=\"mt-5 mb-5 border-bottom border-top\">\r\n        <h1 className=\"pt-2\">Future Development</h1>\r\n        {\"\\n\"}\r\n        <h5>Visual Aspects</h5>\r\n        <ul>\r\n          <li></li>\r\n          <li>\r\n            Include a single loading component that spans the entire page\r\n            instead of having the loading visual show up on both of the\r\n            container blocks.{\" \"}\r\n          </li>\r\n          <li>\r\n            Styling the list item element so that the location appears like\r\n            this.\r\n            <p className=\"text-center mb-4 mt-4\">\r\n              <div>Location</div>\r\n              <div>County, state, Country</div>\r\n            </p>\r\n            This format would allow for better visual styling across different\r\n            screen widths.\r\n          </li>\r\n        </ul>\r\n        <h5>Technological Features</h5>\r\n        <ul>\r\n          <li>Include a weather API on the information section.</li>\r\n          <li>\r\n            Have a way to correct user searches incase they spell something\r\n            incorrectly.\r\n          </li>\r\n        </ul>\r\n        <h5>Future Bug Fixes</h5>\r\n        <p>\r\n          Upon searching for something else in this component the information\r\n          section on the right does not load. However, when the user clicks on a\r\n          list item the right side does load.\r\n        </p>\r\n        <p>\r\n          Solving the issues of overlap between elements on smaller screen\r\n          widths\r\n        </p>\r\n        <h5>API Limitations</h5>\r\n        <p>\r\n          The developer version of the reverse geocode API, that gives us the\r\n          location, limits the search requests to 1000 per day. In order to make\r\n          this feature functional, the React Query library needed to be\r\n          implemented. React Query updates the state of the data periodically\r\n          which causes an API request to be sent. This feature of React Query\r\n          can cause a rapid depletion of the requests therefore potentially\r\n          causing instability.\r\n        </p>\r\n        <p>\r\n          Luckily this site will have a very small number of potential users\r\n          which ensures the functionality. In the future there will be a way to\r\n          count the amount of requests being sent and once a certain threshold\r\n          is met there will be a notice shown to the user explaining why the\r\n          site needs to be put on pause for the day.\r\n        </p>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport \"./Footer.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <Container>\r\n        <footer className=\" justify-content-center \">\r\n          <p className=\"footerText\">&copy; Edgar Peña 2021</p>\r\n        </footer>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","// import { BrowserRouter, Route, Switch } from \"react-router-dom\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { useState } from \"react\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n// import { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport Nav from \"./Components/Nav/Nav\";\nimport IntroMain from \"./Components/Main/Intro/IntroMain\";\nimport SearchResults from \"./Components/Main/SearchResults/SearchResults\";\nimport Footer from \"./Components/Footer/Footer\";\n// import ContextRoute from \"./utils/ContextRoute\";\nimport FunctionsContext from \"./utils/FunctionsContext\";\n// import { QueryContext } from \"./utils/QueryContext\";\nimport { QueryContext } from \"./utils/Contexts\";\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n  //Setting up userSearch in parent to send to children\n  const [userSearch, setUserSearch] = useState({\n    input: \"camping\",\n  });\n\n  //initial state for redirecting. If redirect is true then\n  //user gets redirected to /searchresults\n  const [redirectState, setRedirectState] = useState({\n    redirect: false,\n  });\n\n  //When this function runs it sets the redirect state to true and\n  //which would Redirect the user\n  function renderRedirect() {\n    if (redirectState.redirect === true) {\n      return <Redirect to=\"/searchresults\" />;\n    } else {\n      return console.log(\"Redirect did not work\");\n    }\n  }\n\n  console.log(redirectState, \"redirect state before handleSearch\");\n  //handleSearch is run when the user clicks submit on TopInto.js\n  //then user it redirected to SearchResults.js page\n  const handleSearch = async (e) => {\n    try {\n      e.preventDefault();\n\n      console.log(\"handleSearch ran from parent div\");\n\n      return setRedirectState({ redirect: true });\n    } catch (error) {\n      return console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Nav />\n      <BrowserRouter>\n        {/* <Nav /> */}\n        {/* This function activates the Redirect function which redirects the user to /searchResults */}\n        {renderRedirect()}\n        <Switch>\n          <QueryClientProvider client={queryClient}>\n            <FunctionsContext.Provider value={{ handleSearch }}>\n              <QueryContext.Provider value={{ userSearch, setUserSearch }}>\n                {/* Search results page */}\n                <Route path=\"/searchresults\" component={SearchResults} />\n                {/* Intro Page */}\n                <Route path=\"/intro\" component={IntroMain} />\n                {/* This had to be added to make the redirect work. Still not sure why its needed for it to work but it does. oh well */}\n                <Redirect from=\"/\" to=\"/intro\" />\n              </QueryContext.Provider>\n            </FunctionsContext.Provider>\n          </QueryClientProvider>\n        </Switch>\n\n        {/* <Footer /> */}\n      </BrowserRouter>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n// import Footer from \"../src/Components/Footer/Footer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}